<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Initialisation

// init instance variables
x_vel = 0;
y_vel = 0;

max_x_vel = 10;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update player position

var left_pressed = keyboard_check(vk_left);
var right_pressed = keyboard_check(vk_right);

if(left_pressed)
{
    if(x_vel &gt; -max_x_vel)
        x_vel -= 1;
}
else if(right_pressed)
{
    if(x_vel &lt; max_x_vel)
        x_vel += 1;
}
else
{
    if(x_vel !=0)
        x_vel -= sign(x_vel);
}

// flip sprite
if(x_vel != 0)
    image_xscale = sign(x_vel);

// Apply velocity

// Apply Horizontal Velocity
if(place_meeting(x+x_vel,y,obj_solid))  // step will produce collision
{
    while(!place_meeting(x+sign(x_vel),y,obj_solid))
        x+=sign(x_vel);
}
else
{
    x+=x_vel;
}

// Apply Vertical Velocity
if(place_meeting(x,y+y_vel,obj_solid))  // step will produce collision
{
    while(!place_meeting(x,y+sign(y_vel),obj_solid))
        y+=sign(y_vel);
}
else
{
    y+=y_vel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
